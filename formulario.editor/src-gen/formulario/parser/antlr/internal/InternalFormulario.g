/*
 * generated by Xtext
 */
grammar InternalFormulario;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package formulario.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package formulario.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import formulario.services.FormularioGrammarAccess;

}

@parser::members {

 	private FormularioGrammarAccess grammarAccess;
 	
    public InternalFormularioParser(TokenStream input, FormularioGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Formulario";	
   	}
   	
   	@Override
   	protected FormularioGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleFormulario
entryRuleFormulario returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormularioRule()); }
	 iv_ruleFormulario=ruleFormulario 
	 { $current=$iv_ruleFormulario.current; } 
	 EOF 
;

// Rule Formulario
ruleFormulario returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFormularioAccess().getFormularioAction_0(),
            $current);
    }
)	otherlv_1='Formulario' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFormularioAccess().getFormularioKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFormularioAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormularioRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFormularioAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='entradas' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFormularioAccess().getEntradasKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormularioRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getFormularioAccess().getEntradasInputCrossReference_4_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getFormularioAccess().getRightCurlyBracketKeyword_5());
    }
)
;







// Entry rule entryRuleInput_Impl
entryRuleInput_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInput_ImplRule()); }
	 iv_ruleInput_Impl=ruleInput_Impl 
	 { $current=$iv_ruleInput_Impl.current; } 
	 EOF 
;

// Rule Input_Impl
ruleInput_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInput_ImplAccess().getInputAction_0(),
            $current);
    }
)	otherlv_1='Input' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInput_ImplAccess().getInputKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInput_ImplAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInput_ImplRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleInputTexto
entryRuleInputTexto returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInputTextoRule()); }
	 iv_ruleInputTexto=ruleInputTexto 
	 { $current=$iv_ruleInputTexto.current; } 
	 EOF 
;

// Rule InputTexto
ruleInputTexto returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInputTextoAccess().getInputTextoAction_0(),
            $current);
    }
)	otherlv_1='InputTexto' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInputTextoAccess().getInputTextoKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputTextoAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputTextoRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInputRadio
entryRuleInputRadio returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInputRadioRule()); }
	 iv_ruleInputRadio=ruleInputRadio 
	 { $current=$iv_ruleInputRadio.current; } 
	 EOF 
;

// Rule InputRadio
ruleInputRadio returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInputRadioAccess().getInputRadioAction_0(),
            $current);
    }
)	otherlv_1='InputRadio' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInputRadioAccess().getInputRadioKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputRadioAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputRadioRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInputCombo
entryRuleInputCombo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInputComboRule()); }
	 iv_ruleInputCombo=ruleInputCombo 
	 { $current=$iv_ruleInputCombo.current; } 
	 EOF 
;

// Rule InputCombo
ruleInputCombo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInputComboAccess().getInputComboAction_0(),
            $current);
    }
)	otherlv_1='InputCombo' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInputComboAccess().getInputComboKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputComboAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputComboRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInputCheck
entryRuleInputCheck returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInputCheckRule()); }
	 iv_ruleInputCheck=ruleInputCheck 
	 { $current=$iv_ruleInputCheck.current; } 
	 EOF 
;

// Rule InputCheck
ruleInputCheck returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInputCheckAccess().getInputCheckAction_0(),
            $current);
    }
)	otherlv_1='InputCheck' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInputCheckAccess().getInputCheckKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputCheckAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputCheckRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInputBoton
entryRuleInputBoton returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInputBotonRule()); }
	 iv_ruleInputBoton=ruleInputBoton 
	 { $current=$iv_ruleInputBoton.current; } 
	 EOF 
;

// Rule InputBoton
ruleInputBoton returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInputBotonAccess().getInputBotonAction_0(),
            $current);
    }
)	otherlv_1='InputBoton' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInputBotonAccess().getInputBotonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputBotonAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputBotonRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


