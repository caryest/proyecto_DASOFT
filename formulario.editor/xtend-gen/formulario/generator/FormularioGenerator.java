/**
 * generated by Xtext
 */
package formulario.generator;

import Formularios_DASOFT.Formulario;
import Formularios_DASOFT.Input;
import com.google.common.collect.Iterables;
import org.eclipse.emf.common.util.TreeIterator;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.IFileSystemAccess;
import org.eclipse.xtext.generator.IGenerator;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class FormularioGenerator implements IGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess fsa) {
    CharSequence _generarMain = this.generarMain();
    fsa.generateFile("forms/Formulario.java", _generarMain);
    CharSequence _generarTest = this.generarTest();
    fsa.generateFile("../tests/forms/Formulario.java", _generarTest);
    TreeIterator<EObject> _allContents = resource.getAllContents();
    Iterable<EObject> _iterable = IteratorExtensions.<EObject>toIterable(_allContents);
    Iterable<Formulario> _filter = Iterables.<Formulario>filter(_iterable, Formulario.class);
    for (final Formulario form : _filter) {
    }
  }
  
  public CharSequence generarMain() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package forms;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import org.eclipse.swt.SWT;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.events.SelectionEvent;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.events.SelectionListener;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.layout.GridData;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.layout.GridLayout;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Button;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Display;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Label;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Shell;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Text;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public class Formulario {");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public static void main(String[] args) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Display display = new Display();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Shell   shell   = new SampleForm().showForm(display);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("while (!shell.isDisposed()) ");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("if (!display.readAndDispatch())");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("display.sleep();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("display.dispose();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public Shell showForm(Display display) {");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("Shell shell = new Shell(display);");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("shell.setText  (\"Sample Form\");");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// checkbutton");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("Button checkCash = new Button(shell, SWT.CHECK);");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("checkCash.setText(\"Pay with cash?\");\t\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// text field");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("Label labelCCNumber = new Label(shell, SWT.NONE);");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("Text  textCCNumber  = new Text(shell, SWT.BORDER);");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("labelCCNumber.setText(\"Credit card number\");");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// layout");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("GridData data = new GridData(SWT.FILL, SWT.FILL, true, false);");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("shell.setLayout(new GridLayout(2, true));");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("data.horizontalSpan = 2;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("checkCash.setLayoutData(data);\t\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// show or hide text field depending on checkbutton selection");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("checkCash.addSelectionListener(new SelectionListener() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public void widgetSelected(SelectionEvent arg0) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("labelCCNumber.setVisible( !checkCash.getSelection() );");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("textCCNumber.setVisible ( !checkCash.getSelection() );");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public void widgetDefaultSelected(SelectionEvent arg0) {}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("});");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// show form");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("shell.pack();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("shell.open();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("return shell;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence compile(final Formulario f) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("/**");
    _builder.newLine();
    _builder.append("* Ventana principal.");
    _builder.newLine();
    _builder.append("*/");
    _builder.newLine();
    _builder.append("package gui;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import javax.swing.*;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public class BaseDatos extends JFrame {");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence compile(final Input inp) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("/**");
    _builder.newLine();
    _builder.append("* Ventana principal.");
    _builder.newLine();
    _builder.append("*/");
    _builder.newLine();
    _builder.append("package gui;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import javax.swing.*;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public class BaseDatos extends JFrame {");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generarTest() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package forms;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import static org.junit.Assert.assertFalse;");
    _builder.newLine();
    _builder.append("import static org.junit.Assert.assertTrue;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Display;");
    _builder.newLine();
    _builder.append("import org.eclipse.swt.widgets.Shell;");
    _builder.newLine();
    _builder.append("import org.eclipse.swtbot.swt.finder.SWTBot;");
    _builder.newLine();
    _builder.append("import org.eclipse.swtbot.swt.finder.junit.SWTBotJunit4ClassRunner;");
    _builder.newLine();
    _builder.append("import org.eclipse.swtbot.swt.finder.utils.SWTBotPreferences;");
    _builder.newLine();
    _builder.append("import org.eclipse.swtbot.swt.finder.widgets.SWTBotCheckBox;");
    _builder.newLine();
    _builder.append("import org.eclipse.swtbot.swt.finder.widgets.SWTBotLabel;");
    _builder.newLine();
    _builder.append("import org.eclipse.swtbot.swt.finder.widgets.SWTBotText;");
    _builder.newLine();
    _builder.append("import org.junit.Before;");
    _builder.newLine();
    _builder.append("import org.junit.Test;");
    _builder.newLine();
    _builder.append("import org.junit.runner.RunWith;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("@RunWith(SWTBotJunit4ClassRunner.class)");
    _builder.newLine();
    _builder.append("public class SampleFormTest {");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("private Display display;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("private Shell shell;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("private SWTBot bot;");
    _builder.newLine();
    _builder.append("    ");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Before");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public void setup() {");
    _builder.newLine();
    _builder.append("      ");
    _builder.append("display = new Display();");
    _builder.newLine();
    _builder.append("      ");
    _builder.append("shell   = new SampleForm().showForm(display);");
    _builder.newLine();
    _builder.append("      ");
    _builder.append("bot     = new SWTBot(shell);");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Test");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void test1() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// slow down execution");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("SWTBotPreferences.PLAYBACK_DELAY = 100;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("SWTBotCheckBox checkCash  = bot.checkBox(\"Pay with cash?\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("SWTBotText  textCCNumber  = bot.textWithLabel(\"Credit card number\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("SWTBotLabel labelCCNumber = bot.label(\"Credit card number\");");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// checkbutton should be unchecked, text field should be visible");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("assertFalse(checkCash.isChecked());");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("assertTrue(textCCNumber.isVisible());");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("assertTrue(labelCCNumber.isVisible());");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// select check");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("checkCash.setFocus();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("checkCash.select();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("display.update();");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// checkbutton should be checked, text field should be hidden");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("assertTrue(checkCash.isChecked());");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("assertFalse(textCCNumber.isVisible());");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("assertFalse(labelCCNumber.isVisible());");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// deselect check");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("checkCash.setFocus();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("checkCash.deselect();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("display.update();");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// checkbutton should be unchecked, text field should be visible");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("assertFalse(checkCash.isChecked());");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("assertTrue(textCCNumber.isVisible());");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("assertTrue(labelCCNumber.isVisible());");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("display.dispose();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("shell.dispose();\t\t ");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
}
