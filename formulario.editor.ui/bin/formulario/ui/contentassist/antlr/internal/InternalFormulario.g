/*
 * generated by Xtext
 */
grammar InternalFormulario;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package formulario.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package formulario.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import formulario.services.FormularioGrammarAccess;

}

@parser::members {
 
 	private FormularioGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(FormularioGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleFormulario
entryRuleFormulario 
:
{ before(grammarAccess.getFormularioRule()); }
	 ruleFormulario
{ after(grammarAccess.getFormularioRule()); } 
	 EOF 
;

// Rule Formulario
ruleFormulario
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFormularioAccess().getGroup()); }
(rule__Formulario__Group__0)
{ after(grammarAccess.getFormularioAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleInput_Impl
entryRuleInput_Impl 
:
{ before(grammarAccess.getInput_ImplRule()); }
	 ruleInput_Impl
{ after(grammarAccess.getInput_ImplRule()); } 
	 EOF 
;

// Rule Input_Impl
ruleInput_Impl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInput_ImplAccess().getGroup()); }
(rule__Input_Impl__Group__0)
{ after(grammarAccess.getInput_ImplAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInputTexto
entryRuleInputTexto 
:
{ before(grammarAccess.getInputTextoRule()); }
	 ruleInputTexto
{ after(grammarAccess.getInputTextoRule()); } 
	 EOF 
;

// Rule InputTexto
ruleInputTexto
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputTextoAccess().getGroup()); }
(rule__InputTexto__Group__0)
{ after(grammarAccess.getInputTextoAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInputRadio
entryRuleInputRadio 
:
{ before(grammarAccess.getInputRadioRule()); }
	 ruleInputRadio
{ after(grammarAccess.getInputRadioRule()); } 
	 EOF 
;

// Rule InputRadio
ruleInputRadio
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputRadioAccess().getGroup()); }
(rule__InputRadio__Group__0)
{ after(grammarAccess.getInputRadioAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInputCombo
entryRuleInputCombo 
:
{ before(grammarAccess.getInputComboRule()); }
	 ruleInputCombo
{ after(grammarAccess.getInputComboRule()); } 
	 EOF 
;

// Rule InputCombo
ruleInputCombo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputComboAccess().getGroup()); }
(rule__InputCombo__Group__0)
{ after(grammarAccess.getInputComboAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInputCheck
entryRuleInputCheck 
:
{ before(grammarAccess.getInputCheckRule()); }
	 ruleInputCheck
{ after(grammarAccess.getInputCheckRule()); } 
	 EOF 
;

// Rule InputCheck
ruleInputCheck
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputCheckAccess().getGroup()); }
(rule__InputCheck__Group__0)
{ after(grammarAccess.getInputCheckAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInputBoton
entryRuleInputBoton 
:
{ before(grammarAccess.getInputBotonRule()); }
	 ruleInputBoton
{ after(grammarAccess.getInputBotonRule()); } 
	 EOF 
;

// Rule InputBoton
ruleInputBoton
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputBotonAccess().getGroup()); }
(rule__InputBoton__Group__0)
{ after(grammarAccess.getInputBotonAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Formulario__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Formulario__Group__0__Impl
	rule__Formulario__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Formulario__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormularioAccess().getFormularioAction_0()); }
(

)
{ after(grammarAccess.getFormularioAccess().getFormularioAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Formulario__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Formulario__Group__1__Impl
	rule__Formulario__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Formulario__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormularioAccess().getFormularioKeyword_1()); }

	'Formulario' 

{ after(grammarAccess.getFormularioAccess().getFormularioKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Formulario__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Formulario__Group__2__Impl
	rule__Formulario__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Formulario__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormularioAccess().getNameAssignment_2()); }
(rule__Formulario__NameAssignment_2)
{ after(grammarAccess.getFormularioAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Formulario__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Formulario__Group__3__Impl
	rule__Formulario__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Formulario__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormularioAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getFormularioAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Formulario__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Formulario__Group__4__Impl
	rule__Formulario__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Formulario__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormularioAccess().getGroup_4()); }
(rule__Formulario__Group_4__0)?
{ after(grammarAccess.getFormularioAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Formulario__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Formulario__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Formulario__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormularioAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getFormularioAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Formulario__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Formulario__Group_4__0__Impl
	rule__Formulario__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Formulario__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormularioAccess().getEntradasKeyword_4_0()); }

	'entradas' 

{ after(grammarAccess.getFormularioAccess().getEntradasKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Formulario__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Formulario__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Formulario__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormularioAccess().getEntradasAssignment_4_1()); }
(rule__Formulario__EntradasAssignment_4_1)
{ after(grammarAccess.getFormularioAccess().getEntradasAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Input_Impl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Input_Impl__Group__0__Impl
	rule__Input_Impl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Input_Impl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInput_ImplAccess().getInputAction_0()); }
(

)
{ after(grammarAccess.getInput_ImplAccess().getInputAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Input_Impl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Input_Impl__Group__1__Impl
	rule__Input_Impl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Input_Impl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInput_ImplAccess().getInputKeyword_1()); }

	'Input' 

{ after(grammarAccess.getInput_ImplAccess().getInputKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Input_Impl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Input_Impl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Input_Impl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInput_ImplAccess().getNameAssignment_2()); }
(rule__Input_Impl__NameAssignment_2)
{ after(grammarAccess.getInput_ImplAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InputTexto__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputTexto__Group__0__Impl
	rule__InputTexto__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputTexto__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputTextoAccess().getInputTextoAction_0()); }
(

)
{ after(grammarAccess.getInputTextoAccess().getInputTextoAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputTexto__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputTexto__Group__1__Impl
	rule__InputTexto__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InputTexto__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputTextoAccess().getInputTextoKeyword_1()); }

	'InputTexto' 

{ after(grammarAccess.getInputTextoAccess().getInputTextoKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputTexto__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputTexto__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputTexto__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputTextoAccess().getNameAssignment_2()); }
(rule__InputTexto__NameAssignment_2)
{ after(grammarAccess.getInputTextoAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InputRadio__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputRadio__Group__0__Impl
	rule__InputRadio__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputRadio__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputRadioAccess().getInputRadioAction_0()); }
(

)
{ after(grammarAccess.getInputRadioAccess().getInputRadioAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputRadio__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputRadio__Group__1__Impl
	rule__InputRadio__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InputRadio__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputRadioAccess().getInputRadioKeyword_1()); }

	'InputRadio' 

{ after(grammarAccess.getInputRadioAccess().getInputRadioKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputRadio__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputRadio__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputRadio__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputRadioAccess().getNameAssignment_2()); }
(rule__InputRadio__NameAssignment_2)
{ after(grammarAccess.getInputRadioAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InputCombo__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputCombo__Group__0__Impl
	rule__InputCombo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputCombo__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputComboAccess().getInputComboAction_0()); }
(

)
{ after(grammarAccess.getInputComboAccess().getInputComboAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputCombo__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputCombo__Group__1__Impl
	rule__InputCombo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InputCombo__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputComboAccess().getInputComboKeyword_1()); }

	'InputCombo' 

{ after(grammarAccess.getInputComboAccess().getInputComboKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputCombo__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputCombo__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputCombo__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputComboAccess().getNameAssignment_2()); }
(rule__InputCombo__NameAssignment_2)
{ after(grammarAccess.getInputComboAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InputCheck__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputCheck__Group__0__Impl
	rule__InputCheck__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputCheck__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputCheckAccess().getInputCheckAction_0()); }
(

)
{ after(grammarAccess.getInputCheckAccess().getInputCheckAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputCheck__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputCheck__Group__1__Impl
	rule__InputCheck__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InputCheck__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputCheckAccess().getInputCheckKeyword_1()); }

	'InputCheck' 

{ after(grammarAccess.getInputCheckAccess().getInputCheckKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputCheck__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputCheck__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputCheck__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputCheckAccess().getNameAssignment_2()); }
(rule__InputCheck__NameAssignment_2)
{ after(grammarAccess.getInputCheckAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InputBoton__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputBoton__Group__0__Impl
	rule__InputBoton__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputBoton__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputBotonAccess().getInputBotonAction_0()); }
(

)
{ after(grammarAccess.getInputBotonAccess().getInputBotonAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputBoton__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputBoton__Group__1__Impl
	rule__InputBoton__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InputBoton__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputBotonAccess().getInputBotonKeyword_1()); }

	'InputBoton' 

{ after(grammarAccess.getInputBotonAccess().getInputBotonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputBoton__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputBoton__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputBoton__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputBotonAccess().getNameAssignment_2()); }
(rule__InputBoton__NameAssignment_2)
{ after(grammarAccess.getInputBotonAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Formulario__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormularioAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getFormularioAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Formulario__EntradasAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormularioAccess().getEntradasInputCrossReference_4_1_0()); }
(
{ before(grammarAccess.getFormularioAccess().getEntradasInputEStringParserRuleCall_4_1_0_1()); }
	ruleEString{ after(grammarAccess.getFormularioAccess().getEntradasInputEStringParserRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getFormularioAccess().getEntradasInputCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Input_Impl__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInput_ImplAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getInput_ImplAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputTexto__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputTextoAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getInputTextoAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputRadio__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputRadioAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getInputRadioAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputCombo__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputComboAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getInputComboAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputCheck__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputCheckAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getInputCheckAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputBoton__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputBotonAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getInputBotonAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


